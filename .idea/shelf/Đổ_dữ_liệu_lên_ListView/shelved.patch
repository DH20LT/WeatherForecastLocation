Index: app/src/main/java/com/example/weatherforecast/MainActivityFavorite.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.weatherforecast;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.ImageView;\r\nimport android.widget.ListView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.google.android.gms.common.api.Status;\r\nimport com.google.android.libraries.places.api.Places;\r\nimport com.google.android.libraries.places.api.model.Place;\r\nimport com.google.android.libraries.places.api.model.TypeFilter;\r\nimport com.google.android.libraries.places.widget.Autocomplete;\r\nimport com.google.android.libraries.places.widget.AutocompleteActivity;\r\nimport com.google.android.libraries.places.widget.model.AutocompleteActivityMode;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Locale;\r\n\r\npublic class MainActivityFavorite extends AppCompatActivity {\r\n\r\n    public static final String TAG = \"MainActivityFavorite\";\r\n\r\n    ImageView backIcon, btnAdd, btnEdit, userIcon, homeIcon, chartIcon, favoriteIcon, findIcon;\r\n    TextView nameTP;\r\n    ListView lv;\r\n\r\n    private static final int AUTOCOMPLETE_REQUEST_CODE = 1;\r\n\r\n    WeatherAdapterNext7Days weatherAdapter;\r\n    ArrayList<WeatherItemNext7Days> weatherArray;\r\n\r\n    WeatherAdapterNext7Days placeList;\r\n\r\n    // init Firebase Realtime Database\r\n    private FirebaseDatabase database = FirebaseDatabase.getInstance();\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main_favorite);\r\n\r\n        if (!Places.isInitialized()) {\r\n            Places.initialize(getApplicationContext(), BuildConfig.API_KEY_MAPS, Locale.US);\r\n        }\r\n\r\n        backIcon = findViewById(R.id.img_back);\r\n        favoriteIcon = (ImageView) findViewById(R.id.favorite_icon);\r\n        chartIcon = (ImageView) findViewById(R.id.chart_icon);\r\n        userIcon = (ImageView) findViewById(R.id.user_icon);\r\n        homeIcon = (ImageView) findViewById(R.id.home_icon);\r\n        findIcon = (ImageView) findViewById(R.id.find_icon);\r\n        btnAdd = findViewById(R.id.img_plus);\r\n        lv = findViewById(R.id.listview_favorite);\r\n        placeList = new WeatherAdapterNext7Days(this, R.layout.custom_listview_favorite);\r\n\r\n        addControls();\r\n\r\n        // get data from Firebase\r\n        DatabaseReference myRef = database.getReference(\"favorites\");\r\n        myRef.get().addOnCompleteListener(task -> {\r\n            if (task.isSuccessful()) {\r\n                DataSnapshot dataSnapshot = (DataSnapshot) task.getResult();\r\n                if (dataSnapshot.exists()) {\r\n                    Log.i(TAG, \"onCreate: \" + dataSnapshot.getValue());\r\n                    for (DataSnapshot snapshot : dataSnapshot.getChildren()) {\r\n                        String name = snapshot.child(\"name\").getValue(String.class);\r\n                        String lat = snapshot.child(\"lat\").getValue(String.class);\r\n                        String lon = snapshot.child(\"lon\").getValue(String.class);\r\n\r\n                        // add data to listview\r\n                        placeList.add(new WeatherItemNext7Days(name));\r\n                    }\r\n                    lv.setAdapter(placeList);\r\n                }\r\n            }\r\n        });\r\n\r\n        findIcon.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                startActivity(new Intent(MainActivityFavorite.this, MainActivityFind.class));\r\n            }\r\n        });\r\n\r\n        backIcon.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                onBackPressed();\r\n            }\r\n        });\r\n\r\n        homeIcon.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                startActivity(new Intent(MainActivityFavorite.this, MainActivityHome.class));\r\n            }\r\n        });\r\n\r\n        userIcon.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                startActivity(new Intent(MainActivityFavorite.this, MainActivityLoginByWhat.class));\r\n            }\r\n        });\r\n\r\n        btnAdd.setOnClickListener(view -> onSearchCalled());\r\n\r\n    }\r\n\r\n    private void addControls() {\r\n        weatherArray = new ArrayList<>();\r\n        weatherAdapter = new WeatherAdapterNext7Days(this, R.layout.custom_listview_favorite);\r\n    }\r\n\r\n//    public void Get7DaysData(String latData, String longData) {\r\n//        RequestQueue requestQueue = Volley.newRequestQueue(MainActivityFavorite.this);\r\n//        String url = \"https://api.openweathermap.org/data/3.0/onecall?lat=\"\r\n//                + latData + \"&lon=\" + longData\r\n//                + \"&units=metric&lang=vi&appid=80cb1c70e3a3eb816f34f5e4261df662\";\r\n//        Log.i(TAG, \"homnaytesturl\" + url);\r\n//        StringRequest stringRequest = new StringRequest(Request.Method.GET, url, new Response.Listener<String>() {\r\n//            @Override\r\n//            public void onResponse(String response) {\r\n//                try {\r\n//                    JSONObject jsonObject = new JSONObject(response);\r\n//                    JSONObject jsonObjectCurrent = jsonObject.getJSONObject(\"current\");\r\n//                    int temp = jsonObjectCurrent.getInt(\"temp\");\r\n//                    JSONArray jsonArrayList = jsonObjectCurrent.getJSONArray(\"weather\");\r\n//                    JSONObject jsonObjectList = jsonArrayList.getJSONObject(0);\r\n//                    String description = jsonObjectList.getString(\"description\");\r\n//\r\n//                    WeatherItemNext7Days weatherItemNext7Days\r\n//                            = new WeatherItemNext7Days(description, \"\", temp, 0);\r\n//\r\n//                    weatherAdapter.add(weatherItemNext7Days);\r\n//\r\n//                    lv.setAdapter(weatherAdapter);\r\n//                } catch (JSONException e) {\r\n//                    e.printStackTrace();\r\n//                }\r\n//            }\r\n//        }, new Response.ErrorListener() {\r\n//            @Override\r\n//            public void onErrorResponse(VolleyError error) {\r\n//\r\n//            }\r\n//        });\r\n//        requestQueue.add(stringRequest);\r\n//    }\r\n\r\n    public void onSearchCalled() {\r\n        Log.i(TAG, \"onSearchCalled\");\r\n        // Set the fields to specify which types of place data to return.\r\n        List<Place.Field> fields = Arrays.asList(Place.Field.ID, Place.Field.NAME, Place.Field.ADDRESS, Place.Field.LAT_LNG);\r\n        // Start the autocomplete intent.\r\n        Intent intent = new Autocomplete.IntentBuilder(\r\n                AutocompleteActivityMode.FULLSCREEN, fields)\r\n                .setCountry(\"VN\")\r\n                .setTypeFilter(TypeFilter.CITIES)\r\n                .build(this);\r\n        Log.i(TAG, \"startActivityForResult\");\r\n        startActivityForResult(intent, AUTOCOMPLETE_REQUEST_CODE);\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        Log.i(TAG, \"onActivityResult\");\r\n        if (requestCode == AUTOCOMPLETE_REQUEST_CODE) {\r\n            if (resultCode == RESULT_OK) {\r\n                Log.i(TAG, \"onActivityResult RESULT_OK\");\r\n                Place place = Autocomplete.getPlaceFromIntent(data);\r\n                Log.i(TAG, \"Place: \" + place.getName() + \", \" + place.getId() + \", \" + place.getAddress());\r\n                Toast.makeText(MainActivityFavorite.this, \"ID: \" + place.getId() + \"address:\" + place.getAddress() +\r\n                        \"Name:\" + place.getName() + \" latlong: \" + place.getLatLng(), Toast.LENGTH_LONG).show();\r\n                String address = place.getAddress();\r\n                DatabaseReference favorite = database.getReference().child(\"favorites\");\r\n                // save place to firebase\r\n                com.example.weatherforecast.Place place1 = new com.example.weatherforecast.Place(place.getName(),\r\n                        String.valueOf(place.getLatLng().latitude),\r\n                        String.valueOf(place.getLatLng().longitude)\r\n                );\r\n                favorite.push().setValue(place1);\r\n                placeList.add(new WeatherItemNext7Days(place.getName()));\r\n                lv.setAdapter(placeList);\r\n            } else if (resultCode == AutocompleteActivity.RESULT_ERROR) {\r\n                // TODO: Handle the error.\r\n                Status status = Autocomplete.getStatusFromIntent(data);\r\n                Toast.makeText(MainActivityFavorite.this, \"Error: \" + status.getStatusMessage(), Toast.LENGTH_LONG).show();\r\n                Log.i(TAG, status.getStatusMessage());\r\n            } else if (resultCode == RESULT_CANCELED) {\r\n                // The user canceled the operation.\r\n            }\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/weatherforecast/MainActivityFavorite.java b/app/src/main/java/com/example/weatherforecast/MainActivityFavorite.java
--- a/app/src/main/java/com/example/weatherforecast/MainActivityFavorite.java	(revision e56b919b52f65b49423dbc4d32aa1b05c1317a85)
+++ b/app/src/main/java/com/example/weatherforecast/MainActivityFavorite.java	(date 1672187361693)
@@ -205,9 +205,32 @@
                         String.valueOf(place.getLatLng().latitude),
                         String.valueOf(place.getLatLng().longitude)
                 );
-                favorite.push().setValue(place1);
-                placeList.add(new WeatherItemNext7Days(place.getName()));
-                lv.setAdapter(placeList);
+
+                // add data to firebase but unique
+                favorite.get().addOnCompleteListener(task -> {
+                    if (task.isSuccessful()) {
+                        DataSnapshot dataSnapshot = (DataSnapshot) task.getResult();
+                        if (dataSnapshot.exists()) {
+                            Log.i(TAG, "onCreate: " + dataSnapshot.getValue());
+                            for (DataSnapshot snapshot : dataSnapshot.getChildren()) {
+                                String name = snapshot.child("name").getValue(String.class);
+                                String lat = snapshot.child("lat").getValue(String.class);
+                                String lon = snapshot.child("lon").getValue(String.class);
+                                if (name.equals(place.getName())) {
+                                    Toast.makeText(MainActivityFavorite.this, "Đã có trong danh sách", Toast.LENGTH_SHORT).show();
+                                    return;
+                                } else {
+                                    favorite.push().setValue(place1);
+                                    placeList.add(new WeatherItemNext7Days(place.getName()));
+                                    lv.setAdapter(placeList);
+                                    Toast.makeText(MainActivityFavorite.this, "Đã thêm thành công", Toast.LENGTH_SHORT).show();
+                                }
+                            }
+
+                        }
+                    }
+                });
+
             } else if (resultCode == AutocompleteActivity.RESULT_ERROR) {
                 // TODO: Handle the error.
                 Status status = Autocomplete.getStatusFromIntent(data);
